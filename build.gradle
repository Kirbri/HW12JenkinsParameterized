plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.12.0'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.29.0",
    selenideVersion = "7.5.1",
    jupiterVersion = "5.11.3",
    javafakerVersion = "1.0.2",
    slf4jVersion = "2.0.16"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.junit.jupiter:junit-jupiter:$jupiterVersion",
            "com.github.javafaker:javafaker:$javafakerVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion"
    )
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task simple_test(type: Test) {
    useJUnitPlatform {
        includeTags("simple")
    }
}

task demoqa_test(type: Test) {
    useJUnitPlatform {
        includeTags("demoqa")
    }
}

task automation_practice(type: Test) {
    useJUnitPlatform {
        includeTags("automationPracticeForm")
    }
}

task simple_three_test(type: Test) {
    useJUnitPlatform {
        includeTags("skipped")
        includeTags("negative")
        includeTags("positive")
    }
}

test {
    useJUnitPlatform()
}